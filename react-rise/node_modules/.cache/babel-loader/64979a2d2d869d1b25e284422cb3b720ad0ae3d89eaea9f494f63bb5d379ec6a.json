{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Dashboard from\"./dashboard\";import Description from\"../components/taskscomponents/Description\";import Note from\"../components/taskscomponents/Note\";import Footer from\"../components/taskscomponents/Footer\";import Task from\"../components/taskscomponents/tasks\";import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Tassk(){const[colorno,setColor]=useState(0);const[tasks,settasks]=useState([]);const[error,setError]=useState(\"\");const changecolor=()=>{setColor(prev=>!prev);};const bodycolor={backgroundColor:colorno?\"black\":\"#f1f4dc\",color:colorno?\"white\":\"black\",height:\"100vh\"};useEffect(()=>{(async()=>{try{const response=await axios.get('/api/tasks');settasks(response.data);}catch(error){console.error('Error fetching tasks:',error);setError('Failed to fetch tasks.Please Login');}})();},[]);function addtask(task){settasks(prev=>{return[...prev,{...task,id:prev.length,isFixed:false}];});(async()=>{try{const params=new URLSearchParams({title:task.title,alarm:task.alarm});await axios.post('/api/tasks',params);}catch(error){console.error('Error adding task:',error);}})();}function handledelete(id){settasks(prev=>{return prev.filter(item=>item.id!==id);});}async function deletepermanent(id){try{await axios.delete('/api/tasks',{headers:{'Content-Type':'application/json'},data:{id}});handledelete(id);}catch(error){console.error('Error deleting task:',error);setError('Failed to delete task');setTimeout(()=>setError(''),3000);// Clear error message after 3 seconds\n}}function handledone(id){const task=tasks.find(task=>task.id===id);const timeoftask=task.alarm;const date=new Date();const currentHours=date.getHours();const currentMinutes=date.getMinutes();const[taskTime,period]=timeoftask.split(\" \");const[taskHours,taskMinutes]=taskTime.split(\":\").map(Number);let taskHours24=taskHours;if(period.toLowerCase()===\"pm\"&&taskHours<12){taskHours24+=12;}else if(period.toLowerCase()===\"am\"&&taskHours===12){taskHours24=0;}const currentTimeInMinutes=currentHours*60+currentMinutes;const taskTimeInMinutes=taskHours24*60+taskMinutes;const timeDifference=currentTimeInMinutes-taskTimeInMinutes;if(timeDifference<0){setError(\"Sorry! Still time is there\");setTimeout(()=>setError(\"\"),3000);// Clear error message after 3 seconds\n}else if(timeDifference<=10){handledelete(id);}else{setError(\"Sorry! It's too late\");setTimeout(()=>setError(\"\"),3000);// Clear error message after 3 seconds\n}}return/*#__PURE__*/_jsxs(\"div\",{style:bodycolor,className:\"container\",children:[/*#__PURE__*/_jsx(Dashboard,{oncolor:changecolor,colorno:colorno}),/*#__PURE__*/_jsx(Description,{}),/*#__PURE__*/_jsx(Task,{addnew:addtask}),tasks.map((item,index)=>/*#__PURE__*/_jsx(Note,{id:item.id,title:item.title,alarm:item.alarm,isFixed:item.isFixed,ondelete:deletepermanent,oncheck:handledone},index)),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:error}),/*#__PURE__*/_jsx(Footer,{})]});}export default Tassk;","map":{"version":3,"names":["React","useState","useEffect","Dashboard","Description","Note","Footer","Task","axios","jsx","_jsx","jsxs","_jsxs","Tassk","colorno","setColor","tasks","settasks","error","setError","changecolor","prev","bodycolor","backgroundColor","color","height","response","get","data","console","addtask","task","id","length","isFixed","params","URLSearchParams","title","alarm","post","handledelete","filter","item","deletepermanent","delete","headers","setTimeout","handledone","find","timeoftask","date","Date","currentHours","getHours","currentMinutes","getMinutes","taskTime","period","split","taskHours","taskMinutes","map","Number","taskHours24","toLowerCase","currentTimeInMinutes","taskTimeInMinutes","timeDifference","style","className","children","oncolor","addnew","index","ondelete","oncheck"],"sources":["C:/Users/SIDHARTHA/Documents/RISEUP/react-rise/src/pages/tassk.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Description from \"../components/taskscomponents/Description\";\r\nimport Note from \"../components/taskscomponents/Note\";\r\nimport Footer from \"../components/taskscomponents/Footer\";\r\nimport Task from \"../components/taskscomponents/tasks\";\r\nimport axios from 'axios';\r\n\r\nfunction Tassk() {\r\n  const [colorno, setColor] = useState(0);\r\n  const [tasks, settasks] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const changecolor = () => {\r\n    setColor((prev) => !prev);\r\n  };\r\n\r\n  const bodycolor = {\r\n    backgroundColor: colorno ? \"black\" : \"#f1f4dc\",\r\n    color: colorno ? \"white\" : \"black\",\r\n    height: \"100vh\",\r\n  };\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await axios.get('/api/tasks');\r\n        settasks(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n        setError('Failed to fetch tasks.Please Login');\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  function addtask(task) {\r\n    settasks((prev) => {return [...prev, { ...task, id: prev.length, isFixed: false }]});\r\n  \r\n    (async () => {\r\n      try {\r\n        const params = new URLSearchParams({\r\n          title: task.title,\r\n          alarm: task.alarm\r\n        });\r\n  \r\n       await axios.post('/api/tasks', params);\r\n      } catch (error) {\r\n        console.error('Error adding task:', error);\r\n      }\r\n    })();\r\n  }\r\n\r\n  function handledelete(id) {\r\n    settasks((prev) => {\r\n      return prev.filter((item) => item.id !== id);\r\n    });\r\n\r\n  }\r\n\r\n  async function deletepermanent(id) {\r\n    try {\r\n      await axios.delete('/api/tasks',{\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: { id }\r\n    });\r\n      handledelete(id);\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n      setError('Failed to delete task');\r\n      setTimeout(() => setError(''), 3000); // Clear error message after 3 seconds\r\n    }\r\n  }\r\n\r\n  function handledone(id) {\r\n    const task = tasks.find((task) => task.id === id);\r\n    const timeoftask = task.alarm;\r\n\r\n    const date = new Date();\r\n    const currentHours = date.getHours();\r\n    const currentMinutes = date.getMinutes();\r\n\r\n    const [taskTime, period] = timeoftask.split(\" \");\r\n    const [taskHours, taskMinutes] = taskTime.split(\":\").map(Number);\r\n\r\n    let taskHours24 = taskHours;\r\n    if (period.toLowerCase() === \"pm\" && taskHours < 12) {\r\n      taskHours24 += 12;\r\n    } else if (period.toLowerCase() === \"am\" && taskHours === 12) {\r\n      taskHours24 = 0;\r\n    }\r\n\r\n    const currentTimeInMinutes = currentHours * 60 + currentMinutes;\r\n    const taskTimeInMinutes = taskHours24 * 60 + taskMinutes;\r\n\r\n    const timeDifference = currentTimeInMinutes - taskTimeInMinutes;\r\n\r\n    if (timeDifference < 0) {\r\n      setError(\"Sorry! Still time is there\");\r\n      setTimeout(() => setError(\"\"), 3000); // Clear error message after 3 seconds\r\n    } else if (timeDifference <= 10) {\r\n      handledelete(id);\r\n    } else {\r\n      setError(\"Sorry! It's too late\");\r\n      setTimeout(() => setError(\"\"), 3000); // Clear error message after 3 seconds\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={bodycolor} className=\"container\">\r\n      <Dashboard oncolor={changecolor} colorno={colorno} />\r\n      <Description />\r\n      <Task addnew={addtask} />\r\n      {tasks.map((item, index) => (\r\n        <Note\r\n          key={index}\r\n          id={item.id}\r\n          title={item.title}\r\n          alarm={item.alarm}\r\n          isFixed={item.isFixed}\r\n          ondelete={deletepermanent}\r\n          oncheck={handledone}\r\n        />\r\n      ))}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tassk;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}