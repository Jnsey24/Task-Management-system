{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Dashboard from\"./dashboard\";import Description from\"../components/taskscomponents/Description\";import Note from\"../components/taskscomponents/Note\";import Footer from\"../components/taskscomponents/Footer\";import Task from\"../components/taskscomponents/tasks\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Tassk(){const[colorno,setColor]=useState(0);const[tasks,settasks]=useState([{id:0,title:\"Fixed Task 1\",alarm:\"5:37 PM\",isFixed:true},{id:1,title:\"Fixed Task 2\",alarm:\"5:40 PM\",isFixed:true}]);const[error,setError]=useState(\"\");const[score,setScore]=useState(0);const[completedTasks,setCompletedTasks]=useState(0);const[coinMessage,setCoinMessage]=useState(\"\");const changecolor=()=>{setColor(prev=>!prev);};const bodycolor={backgroundColor:colorno?\"black\":\"#f1f4dc\",color:colorno?\"white\":\"black\",height:\"100vh\"};useEffect(()=>{if(tasks.length>0&&completedTasks===tasks.length){setScore(prevScore=>prevScore+1);setCoinMessage(\"You gained one coin!\");setTimeout(()=>setCoinMessage(\"\"),3000);setCompletedTasks(0);console.log(score);// Reset completed tasks count for the next day\n}},[completedTasks,tasks,score]);function addtask(task){settasks(prev=>{return[...prev,{...task,id:prev.length,isFixed:false}];});}function handledelete(id){settasks(prev=>{return prev.filter(item=>item.id!==id);});// Update the completed tasks count correctly if a completed task is deleted\nsetCompletedTasks(prev=>prev>0?prev-1:0);}function handledone(id){const task=tasks.find(task=>task.id===id);const timeoftask=task.alarm;const date=new Date();const currentHours=date.getHours();const currentMinutes=date.getMinutes();const[taskTime,period]=timeoftask.split(\" \");const[taskHours,taskMinutes]=taskTime.split(\":\").map(Number);let taskHours24=taskHours;if(period.toLowerCase()===\"pm\"&&taskHours<12){taskHours24+=12;}else if(period.toLowerCase()===\"am\"&&taskHours===12){taskHours24=0;}const currentTimeInMinutes=currentHours*60+currentMinutes;const taskTimeInMinutes=taskHours24*60+taskMinutes;const timeDifference=currentTimeInMinutes-taskTimeInMinutes;if(timeDifference<0){setError(\"Sorry! Still time is there\");setTimeout(()=>setError(\"\"),3000);// Clear error message after 3 seconds\n}else if(timeDifference<=10){setCompletedTasks(prev=>prev+1);handledelete(id);}else{setError(\"Sorry! It's too late\");setTimeout(()=>setError(\"\"),3000);// Clear error message after 3 seconds\n}}return/*#__PURE__*/_jsxs(\"div\",{style:bodycolor,className:\"container\",children:[/*#__PURE__*/_jsx(Dashboard,{oncolor:changecolor,colorno:colorno}),/*#__PURE__*/_jsx(Description,{}),/*#__PURE__*/_jsx(Task,{addnew:addtask}),tasks.map((item,index)=>/*#__PURE__*/_jsx(Note,{id:item.id,title:item.title,alarm:item.alarm,isFixed:item.isFixed,ondelete:handledelete,oncheck:handledone},index)),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:error}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(\"div\",{children:coinMessage&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"green\"},children:coinMessage})})]});}export default Tassk;","map":{"version":3,"names":["React","useState","useEffect","Dashboard","Description","Note","Footer","Task","jsx","_jsx","jsxs","_jsxs","Tassk","colorno","setColor","tasks","settasks","id","title","alarm","isFixed","error","setError","score","setScore","completedTasks","setCompletedTasks","coinMessage","setCoinMessage","changecolor","prev","bodycolor","backgroundColor","color","height","length","prevScore","setTimeout","console","log","addtask","task","handledelete","filter","item","handledone","find","timeoftask","date","Date","currentHours","getHours","currentMinutes","getMinutes","taskTime","period","split","taskHours","taskMinutes","map","Number","taskHours24","toLowerCase","currentTimeInMinutes","taskTimeInMinutes","timeDifference","style","className","children","oncolor","addnew","index","ondelete","oncheck"],"sources":["C:/Users/SIDHARTHA/Documents/RISEUP/react-rise/src/pages/tassk.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Description from \"../components/taskscomponents/Description\";\r\nimport Note from \"../components/taskscomponents/Note\";\r\nimport Footer from \"../components/taskscomponents/Footer\";\r\nimport Task from \"../components/taskscomponents/tasks\";\r\n\r\nfunction Tassk() {\r\n  const [colorno, setColor] = useState(0);\r\n  const [tasks, settasks] = useState([\r\n    { id: 0, title: \"Fixed Task 1\", alarm: \"5:37 PM\", isFixed: true },\r\n    { id: 1, title: \"Fixed Task 2\", alarm: \"5:40 PM\", isFixed: true },\r\n  ]);\r\n  const [error, setError] = useState(\"\");\r\n  const [score, setScore] = useState(0);\r\n  const [completedTasks, setCompletedTasks] = useState(0);\r\n  const [coinMessage, setCoinMessage] = useState(\"\");\r\n\r\n  const changecolor = () => {\r\n    setColor((prev) => !prev);\r\n  };\r\n\r\n  const bodycolor = {\r\n    backgroundColor: colorno ? \"black\" : \"#f1f4dc\",\r\n    color: colorno ? \"white\" : \"black\",\r\n    height: \"100vh\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasks.length > 0 && completedTasks === tasks.length) {\r\n      setScore((prevScore) => prevScore + 1);\r\n      setCoinMessage(\"You gained one coin!\");\r\n      setTimeout(() => setCoinMessage(\"\"), 3000);\r\n      setCompletedTasks(0); \r\n      console.log(score);// Reset completed tasks count for the next day\r\n    }\r\n  }, [completedTasks, tasks,score]);\r\n\r\n  function addtask(task) {\r\n    settasks((prev) => {\r\n      return [...prev, { ...task, id: prev.length, isFixed: false }];\r\n    });\r\n  }\r\n\r\n  function handledelete(id) {\r\n    settasks((prev) => {\r\n      return prev.filter((item) => item.id !== id);\r\n    });\r\n    // Update the completed tasks count correctly if a completed task is deleted\r\n    setCompletedTasks((prev) => (prev > 0 ? prev - 1 : 0));\r\n  }\r\n\r\n  function handledone(id) {\r\n    const task = tasks.find((task) => task.id === id);\r\n    const timeoftask = task.alarm;\r\n\r\n    const date = new Date();\r\n    const currentHours = date.getHours();\r\n    const currentMinutes = date.getMinutes();\r\n\r\n    const [taskTime, period] = timeoftask.split(\" \");\r\n    const [taskHours, taskMinutes] = taskTime.split(\":\").map(Number);\r\n\r\n    let taskHours24 = taskHours;\r\n    if (period.toLowerCase() === \"pm\" && taskHours < 12) {\r\n      taskHours24 += 12;\r\n    } else if (period.toLowerCase() === \"am\" && taskHours === 12) {\r\n      taskHours24 = 0;\r\n    }\r\n\r\n    const currentTimeInMinutes = currentHours * 60 + currentMinutes;\r\n    const taskTimeInMinutes = taskHours24 * 60 + taskMinutes;\r\n\r\n    const timeDifference = currentTimeInMinutes - taskTimeInMinutes;\r\n\r\n    if (timeDifference < 0) {\r\n      setError(\"Sorry! Still time is there\");\r\n      setTimeout(() => setError(\"\"), 3000); // Clear error message after 3 seconds\r\n    } else if (timeDifference <= 10) {\r\n      setCompletedTasks((prev) => prev + 1);\r\n      handledelete(id);\r\n    } else {\r\n      setError(\"Sorry! It's too late\");\r\n      setTimeout(() => setError(\"\"), 3000); // Clear error message after 3 seconds\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={bodycolor} className=\"container\">\r\n      <Dashboard oncolor={changecolor} colorno={colorno} />\r\n      <Description />\r\n      <Task addnew={addtask} />\r\n      {tasks.map((item, index) => (\r\n        <Note\r\n          key={index}\r\n          id={item.id}\r\n          title={item.title}\r\n          alarm={item.alarm}\r\n          isFixed={item.isFixed}\r\n          ondelete={handledelete}\r\n          oncheck={handledone}\r\n        />\r\n      ))}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <Footer />\r\n      <div>\r\n        {coinMessage && <p style={{ color: \"green\" }}>{coinMessage}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tassk;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}