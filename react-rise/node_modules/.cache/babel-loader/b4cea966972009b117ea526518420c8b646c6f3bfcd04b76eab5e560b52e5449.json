{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);useEffect(()=>{const fetchUser=async()=>{try{const response=await axios.get('/api/check-auth');if(response.data.loggedIn){setUser(response.data.user);localStorage.setItem('user',JSON.stringify(response.data.user));}}catch(error){console.error('Error fetching user:',error);}};fetchUser();},[]);const login=async(username,password)=>{try{const response=await axios.post('/login',new URLSearchParams({username,password}));setUser(response.data.user);localStorage.setItem('user',JSON.stringify(response.data.user));}catch(error){console.error('Login error:',error);throw error;// Re-throw to handle in the component\n}};const logout=async()=>{try{await axios.post('/logout');setUser(null);localStorage.removeItem('user');}catch(error){console.error('Logout error:',error);}};const googleLogin=async()=>{try{const response=await axios.get('/auth/google');setUser(response.data.user);localStorage.setItem('user',JSON.stringify(response.data.user));}catch(error){console.error('Google login error:',error);}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout,googleLogin},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","fetchUser","response","get","data","loggedIn","localStorage","setItem","JSON","stringify","error","console","login","username","password","post","URLSearchParams","logout","removeItem","googleLogin","Provider","value","useAuth"],"sources":["C:/Users/SIDHARTHA/Documents/RISEUP/react-rise/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await axios.get('/api/check-auth');\r\n        if (response.data.loggedIn) {\r\n          setUser(response.data.user);\r\n          localStorage.setItem('user', JSON.stringify(response.data.user));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user:', error);\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await axios.post('/login', new URLSearchParams({ username, password }));\r\n      setUser(response.data.user);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error; // Re-throw to handle in the component\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post('/logout');\r\n      setUser(null);\r\n      localStorage.removeItem('user');\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    }\r\n  };\r\n\r\n  const googleLogin = async () => {\r\n    try {\r\n      const response = await axios.get('/auth/google');\r\n      setUser(response.data.user);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    } catch (error) {\r\n      console.error('Google login error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, googleLogin }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAV,KAAK,CAACW,GAAG,CAAC,iBAAiB,CAAC,CACnD,GAAID,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAAE,CAC1BL,OAAO,CAACE,QAAQ,CAACE,IAAI,CAACL,IAAI,CAAC,CAC3BO,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACL,IAAI,CAAC,CAAC,CAClE,CACF,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAEDT,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAW,KAAK,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,QAAQ,GAAK,CAC1C,GAAI,CACF,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAV,KAAK,CAACuB,IAAI,CAAC,QAAQ,CAAE,GAAI,CAAAC,eAAe,CAAC,CAAEH,QAAQ,CAAEC,QAAS,CAAC,CAAC,CAAC,CACxFd,OAAO,CAACE,QAAQ,CAACE,IAAI,CAACL,IAAI,CAAC,CAC3BO,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACL,IAAI,CAAC,CAAC,CAClE,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACpC,KAAM,CAAAA,KAAK,CAAE;AACf,CACF,CAAC,CAED,KAAM,CAAAO,MAAM,CAAG,KAAAA,CAAA,GAAY,CACzB,GAAI,CACF,KAAM,CAAAzB,KAAK,CAACuB,IAAI,CAAC,SAAS,CAAC,CAC3Bf,OAAO,CAAC,IAAI,CAAC,CACbM,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC,CACjC,CAAE,MAAOR,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACvC,CACF,CAAC,CAED,KAAM,CAAAS,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACF,KAAM,CAAAjB,QAAQ,CAAG,KAAM,CAAAV,KAAK,CAACW,GAAG,CAAC,cAAc,CAAC,CAChDH,OAAO,CAACE,QAAQ,CAACE,IAAI,CAACL,IAAI,CAAC,CAC3BO,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACL,IAAI,CAAC,CAAC,CAClE,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC7C,CACF,CAAC,CAED,mBACEhB,IAAA,CAACC,WAAW,CAACyB,QAAQ,EAACC,KAAK,CAAE,CAAEtB,IAAI,CAAEa,KAAK,CAAEK,MAAM,CAAEE,WAAY,CAAE,CAAArB,QAAA,CAC/DA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAwB,OAAO,CAAGA,CAAA,GAAMjC,UAAU,CAACM,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}